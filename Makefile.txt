ifneq (,$(wildcard ./.env))
    include .env
    export
endif

SHELL := /bin/bash
.SILENT: clean pull start stop

HOSTS_FILE = /etc/hosts
NETWORK_NAME = justshoppin-docker_default
SERVICE_NAME = nginx-proxy
CONTAINER_IP=172.21.0.11


build:
	echo "Building justshoppinn images ......"
	BUILD_ARGS_FILE=$$(cat .build.env 2>/dev/null); \
	for build_arg in $$BUILD_ARGS_FILE; do \
	    BUILD_ARGS+=" --build-arg $$build_arg"; \
	done; \

	docker build --tag justshoppinn/vendoer_frontend:latest \
    	             --file ./images/vendor_frontend/Dockerfile ./images/ \
    	             $$BUILD_ARGS

	echo "Finished building justshoppinn services"

compose-build:
	$(DOCKER_COMPOSE) build --parallel

# Default target
.PHONY: develop
develop: compose-build start update-hosts
	$(DOCKER_COMPOSE) logs -f

.PHONY: develop-prod
develop-prod: compose-build start
	$(DOCKER_COMPOSE) logs -f

.PHONY: start
start:start update-hosts
	$(DOCKER_COMPOSE) up -d

.PHONY: stop
stop:
	printf '\e[1;31m%-6s\e[m\n' "Stopping justshoppinn.com services..."
	$(DOCKER_COMPOSE) stop
	$(DOCKER_COMPOSE) down --remove-orphans
	$(DOCKER_COMPOSE) down --remove-orphans &> /dev/null
	@sudo sed -i "/$(ROOT_DOMAIN)/d" $(HOSTS_FILE)
	@sudo sed -i "/$(API_VIRTUAL_HOST)/d" $(HOSTS_FILE)
	@sudo sed -i "/$(FRONTEND_VIRTUAL_HOST)/d" $(HOSTS_FILE)
	@echo "Removed custom URL '$(ROOT_DOMAIN)','$(API_VIRTUAL_HOST)','$(FRONTEND_VIRTUAL_HOST)' from $(HOSTS_FILE)"

# Get the container IP address
.PHONY: get-ip
get-ip:
	echo "Getting nginx container ip addresses"
	@$(eval CONTAINER_ID=$(shell $(DOCKER_COMPOSE) ps -q $(SERVICE_NAME)))
	@$(eval CONTAINER_IP=$(shell docker inspect $(CONTAINER_ID) | jq -r ".[0].NetworkSettings.Networks.$(NETWORK_NAME).IPAddress"))
	@echo $(CONTAINER_IP)


# Update /etc/hosts file
.PHONY: update-hosts
update-hosts:
	@echo "Adding '$(ROOT_DOMAIN)' to hosts"
	@if ! grep -q "$(ROOT_DOMAIN)" $(HOSTS_FILE); then \
		echo "$(CONTAINER_IP) $(ROOT_DOMAIN)" | sudo tee -a $(HOSTS_FILE); \
	else \
		sudo sed -i "/$(ROOT_DOMAIN)/c\\$(CONTAINER_IP) $(ROOT_DOMAIN)" $(HOSTS_FILE); \
	fi
	@echo "Custom URL '$(ROOT_DOMAIN)' is mapped to $(CONTAINER_IP)"
	@echo "Adding '$(API_VIRTUAL_HOST)' to hosts"
	@if ! grep -q "$(API_VIRTUAL_HOST)" $(HOSTS_FILE); then \
		echo "$(CONTAINER_IP) $(API_VIRTUAL_HOST)" | sudo tee -a $(HOSTS_FILE); \
	else \
		sudo sed -i "/$(API_VIRTUAL_HOST)/c\\$(CONTAINER_IP) $(API_VIRTUAL_HOST)" $(HOSTS_FILE); \
	fi
	@echo "Custom URL '$(API_VIRTUAL_HOST)' is mapped to $(CONTAINER_IP)"
	@echo "Adding '$(SELLER_PORTAL_VIRTUAL_HOST)' to hosts"
	@if ! grep -q "$(SELLER_PORTAL_VIRTUAL_HOST)" $(HOSTS_FILE); then \
		echo "$(CONTAINER_IP) $(SELLER_PORTAL_VIRTUAL_HOST)" | sudo tee -a $(HOSTS_FILE); \
	else \
		sudo sed -i "/$(SELLER_PORTAL_VIRTUAL_HOST)/c\\$(CONTAINER_IP) $(SELLER_PORTAL_VIRTUAL_HOST)" $(HOSTS_FILE); \
	fi
	@echo "Custom URL '$(SELLER_PORTAL_VIRTUAL_HOST)' is mapped to $(CONTAINER_IP)"
